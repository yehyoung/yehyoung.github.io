<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home title on YehYeh 記事本2.0</title>
    <link>https://yehyoung.github.io/</link>
    <description>Recent content in Home title on YehYeh 記事本2.0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 19 Oct 2017 15:26:15 +0000</lastBuildDate>
    
	<atom:link href="https://yehyoung.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo 安裝</title>
      <link>https://yehyoung.github.io/hugo/01_hugoinstall/</link>
      <pubDate>Sat, 21 Mar 2020 23:24:38 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/01_hugoinstall/</guid>
      <description>Hugo 安裝及基本設定 1. Windows 安裝Hugo 下載Hugo，並解壓縮 安裝檔下載: https://github.com/gohugoio/hugo/releases 如果要使用sass或postCSS則下載 hugo_extended_0.68.3_Windows-64bit.zip 將Hugo.exe的路徑設定到</description>
    </item>
    
    <item>
      <title>Hugo 佈景安裝及設定</title>
      <link>https://yehyoung.github.io/hugo/02_themesetup/</link>
      <pubDate>Sun, 22 Mar 2020 17:55:53 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/02_themesetup/</guid>
      <description>2. 到Hugo網站選擇要使用的佈景 https://themes.gohugo.io/ 3. 下載佈景 https://themes.gohugo.io/hugo-theme-techdoc/ 切換到themes資料夾再執行git clone指令 cd themes git clone https://github.com/thingsym/hugo-theme-techdoc.git 3. 網站設定 1. 複製佈景的設定 將佈景的</description>
    </item>
    
    <item>
      <title>Hugo 新增一篇文章</title>
      <link>https://yehyoung.github.io/hugo/04_newpost/</link>
      <pubDate>Sun, 22 Mar 2020 11:13:57 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/04_newpost/</guid>
      <description>front matter 用hugo new建立新post時，hugo會自動在新檔案中的最上面加入front matter EX: hugo new post/my-first-post.md 以下即為 my-first-post.md 的 front matter --- title: &amp;quot;新增一篇文章&amp;</description>
    </item>
    
    <item>
      <title>Hugo 資料夾與檔案結構</title>
      <link>https://yehyoung.github.io/hugo/03_structure/</link>
      <pubDate>Sun, 22 Mar 2020 11:13:49 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/03_structure/</guid>
      <description>Hugo 專案目錄結構 . ├── archetypes ├── config.toml ├── content ├── data ├── layouts ├── static └── themes archetypes Archetypes 是建立新文章時所使用的樣版檔案 在用hugo new建立一個新文章檔</description>
    </item>
    
    <item>
      <title>Hugo 本機啓動一個伺服器</title>
      <link>https://yehyoung.github.io/hugo/05_runserver/</link>
      <pubDate>Sun, 22 Mar 2020 11:21:12 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/05_runserver/</guid>
      <description>官方文件: https://gohugo.io/commands/hugo_server/ 執行伺服器 執行本機hugo網頁伺服器 hugo server 執行本機hugo網頁伺服器(連草稿也編譯) hugo server -D 不使用快速渲染 有時修改後瀏覽器沒更新，可</description>
    </item>
    
    <item>
      <title>將網站上傳到Github</title>
      <link>https://yehyoung.github.io/hugo/06_pushtogit/</link>
      <pubDate>Sun, 22 Mar 2020 17:56:11 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/06_pushtogit/</guid>
      <description>佈署到 Github Hugo 官網教學文件 Github - Working with GitHub Pages 01 佈署方式 佈署到github可以分為2種 個人的首頁 https://&amp;lt;USERNAME|ORGANIZATION&amp;gt;.github.io/ 一個帳號只能有一個首頁 (這裡介紹的方式) 專案網頁 https://&amp;lt;USERNAME|ORGANIZATION&amp;gt;.github.io/&amp;lt;PROJECT&amp;gt;/ 一個</description>
    </item>
    
    <item>
      <title>程式碼高亮 Highlight</title>
      <link>https://yehyoung.github.io/hugo/highlight/</link>
      <pubDate>Sun, 05 Apr 2020 21:09:08 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/highlight/</guid>
      <description>官網文件 Hugo Syntax-highlighting Hugo是用choma來highlighting choma 在config.toml中，有一些參數可以設定 [markup] [markup.highlight] codeFences = true guessSyntax = false hl_Lines = &amp;#34;&amp;#34; lineNoStart = 1 lineNos =</description>
    </item>
    
    <item>
      <title>在 Hugo 裡使用 SASS</title>
      <link>https://yehyoung.github.io/hugo/sass/</link>
      <pubDate>Sun, 05 Apr 2020 16:06:54 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/sass/</guid>
      <description>SASS檔案 只能把sass檔案放在 /assets/scss/ /themes/your-theme/assets/scss/ 在layouts 資料夾裡加上 {{ $styles := resources.Get &amp;quot;scss/main.scss&amp;quot; | toCSS | minify | fingerprint }} | 為Hugo的管線(pipe)操作，簡單的說就是會</description>
    </item>
    
    <item>
      <title>OtherFunction</title>
      <link>https://yehyoung.github.io/hugo/otherfunction/</link>
      <pubDate>Sun, 05 Apr 2020 15:39:38 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/otherfunction/</guid>
      <description>SASS / SCSS 要使用SASS，hugo安裝的版本要是extended版 &amp;lt;!-- 指定sass的原始檔 --&amp;gt; {{ $sass := resources.Get &amp;#34;sass/main.scss&amp;#34; }} &amp;lt;!-- 用resources.ToCSS將sas</description>
    </item>
    
    <item>
      <title>SQLite 簡介</title>
      <link>https://yehyoung.github.io/python/sqlite/intro/</link>
      <pubDate>Fri, 03 Apr 2020 23:20:32 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/python/sqlite/intro/</guid>
      <description>SQLite SQLite SQLite是單檔案資料庫，整個資料庫只有一個檔案，容易複製及佈署 建立資料庫 sqlite3 資料庫檔名.db DB Browser for SQLite 可以安裝DB Browser來查看S</description>
    </item>
    
    <item>
      <title>Hugo FrontMatter</title>
      <link>https://yehyoung.github.io/hugo/frontmatter/</link>
      <pubDate>Fri, 03 Apr 2020 21:26:34 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/frontmatter/</guid>
      <description>Front Matter為文章內的Metadata設定 Front Matter在文章的最上面，一般為YAML型式 yaml: 以---開始和結束 toml: 以+++開始和結束 json: 以{ }</description>
    </item>
    
    <item>
      <title>GulpV4Sample2</title>
      <link>https://yehyoung.github.io/gulp/gulpv4sample2/</link>
      <pubDate>Fri, 03 Apr 2020 10:21:33 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/gulp/gulpv4sample2/</guid>
      <description>webstoemp-gulpfile.js  &amp;#34;use strict&amp;#34;; // Load plugins const autoprefixer = require(&amp;#34;autoprefixer&amp;#34;); const browsersync = require(&amp;#34;browser-sync&amp;#34;).create(); const cp = require(&amp;#34;child_process&amp;#34;); const cssnano = require(&amp;#34;cssnano&amp;#34;); const del = require(&amp;#34;del&amp;#34;); const eslint = require(&amp;#34;gulp-eslint&amp;#34;); const gulp = require(&amp;#34;gulp&amp;#34;); const imagemin = require(&amp;#34;gulp-imagemin&amp;#34;); const newer = require(&amp;#34;gulp-newer&amp;#34;); const plumber = require(&amp;#34;gulp-plumber&amp;#34;); const postcss = require(&amp;#34;gulp-postcss&amp;#34;); const rename = require(&amp;#34;gulp-rename&amp;#34;); const sass = require(&amp;#34;gulp-sass&amp;#34;); const webpack = require(&amp;#34;webpack&amp;#34;); const webpackconfig = require(&amp;#34;./webpack.config.js&amp;#34;); const webpackstream = require(&amp;#34;webpack-stream&amp;#34;); // BrowserSync function browserSync(done) { browsersync.</description>
    </item>
    
    <item>
      <title>GulpV4Sample1</title>
      <link>https://yehyoung.github.io/gulp/gulpv4sample1/</link>
      <pubDate>Fri, 03 Apr 2020 10:17:22 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/gulp/gulpv4sample1/</guid>
      <description>Upgrade Gulp 3 to Gulp 4 the gulpfile.js workflow  const { src, dest, parallel, series, watch } = require(&amp;#39;gulp&amp;#39;); // const pug = require(&amp;#39;gulp-pug&amp;#39;); // Pug default view template const twig = require(&amp;#39;gulp-twig&amp;#39;); const sass = require(&amp;#39;gulp-sass&amp;#39;); const prefix = require(&amp;#39;gulp-autoprefixer&amp;#39;); const data = require(&amp;#39;gulp-data&amp;#39;); //const minifyCSS = require(&amp;#39;gulp-csso&amp;#39;); const sourcemaps = require(&amp;#39;gulp-sourcemaps&amp;#39;); const concat = require(&amp;#39;gulp-concat&amp;#39;); const plumber = require(&amp;#39;gulp-plumber&amp;#39;); const browsersync = require(&amp;#39;browser-sync&amp;#39;); const gulpcopy = require(&amp;#39;gulp-copy&amp;#39;); const fs = require(&amp;#39;fs&amp;#39;); const del = require(&amp;#39;del&amp;#39;); const path = require(&amp;#39;path&amp;#39;); /* * Directories here */ var paths = { build: &amp;#39;.</description>
    </item>
    
    <item>
      <title>GulpTask</title>
      <link>https://yehyoung.github.io/gulp/gulptask/</link>
      <pubDate>Thu, 02 Apr 2020 22:43:52 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/gulp/gulptask/</guid>
      <description>建立任務 Gulp 裡的一個任務即為一個JavaScript函式 函式的參數通常為一個可回呼(Call Back)的函式 回傳值通常是stream、prom</description>
    </item>
    
    <item>
      <title>GulpPlugin</title>
      <link>https://yehyoung.github.io/gulp/gulpplugin/</link>
      <pubDate>Thu, 02 Apr 2020 22:17:13 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/gulp/gulpplugin/</guid>
      <description>gulp-concat：合併檔案 gulp-minify-css：壓縮 CSS gulp-uglify：混淆並壓縮 JS gulp-rename：重新命名檔</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>https://yehyoung.github.io/webpack/reference/</link>
      <pubDate>Thu, 02 Apr 2020 20:18:25 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/webpack/reference/</guid>
      <description>參考 Magic Len 如何用Webpack來打包JavaScript、SCSS/CSS、HTML網頁和任意檔案？</description>
    </item>
    
    <item>
      <title>Glob</title>
      <link>https://yehyoung.github.io/gulp/glob/</link>
      <pubDate>Thu, 02 Apr 2020 20:01:06 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/gulp/glob/</guid>
      <description>什麼是Glob Glob 一開始是在UNIX上使用的一種具有萬用字元的檔案路徑表示方法 特殊符號 說明 範例 / 分隔符號 &#39;scripts/**/*.js&#39; \ 轉義符號 \\* | 在字串中，批配任意數量</description>
    </item>
    
    <item>
      <title>Gulp 4 介紹及安裝</title>
      <link>https://yehyoung.github.io/gulp/gulpintro/</link>
      <pubDate>Thu, 02 Apr 2020 20:00:19 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/gulp/gulpintro/</guid>
      <description>什麼是 Gulp Gulp是Nodejs的自動任務執行器 Gulp是前端開發的建構工具 將 Pug 轉為 Html 將 Sass 轉為 CSS 檔案合併 JS檔壓縮 圖片壓縮 監聽檔案異動 測試 安裝</description>
    </item>
    
    <item>
      <title>Python - CSV</title>
      <link>https://yehyoung.github.io/python/basic/csv/</link>
      <pubDate>Sun, 29 Mar 2020 15:09:33 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/python/basic/csv/</guid>
      <description>寫入CSV 一次寫入一行 import csv with open(&amp;#39;test.csv&amp;#39;, &amp;#39;wb&amp;#39;) as csvfile: writer = csv.writer(csvfile) # 取得寫CSV寫檔物件 writer.writerow([&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;c&amp;#39;]) # 寫入資料 一次寫入表格(巢狀List) import csv table = [ [&amp;#39;A1&amp;#39;, &amp;#39;A2&amp;#39;, &amp;#39;A3&amp;#39;], [&amp;#39;B1&amp;#39;, &amp;#39;B2&amp;#39;, &amp;#39;B3&amp;#39;], [&amp;#39;C1&amp;#39;, &amp;#39;C2&amp;#39;, &amp;#39;C3&amp;#39;] ] with</description>
    </item>
    
    <item>
      <title>Stock</title>
      <link>https://yehyoung.github.io/python/stock/stock/</link>
      <pubDate>Wed, 25 Mar 2020 23:11:19 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/python/stock/stock/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>LINEBot 概念</title>
      <link>https://yehyoung.github.io/linebot/linebotintro/</link>
      <pubDate>Tue, 24 Mar 2020 22:36:54 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/linebot/linebotintro/</guid>
      <description>LINE Bot的運作如下圖 準備 開發者先到LINE Develope的網站註冊 LINE 開發者網站: https://developers.line.biz/en/ 建立一個新的Messaging API 的頻道 (Channel) 取得Bot的QR</description>
    </item>
    
    <item>
      <title>Django 介紹及安裝</title>
      <link>https://yehyoung.github.io/linebot/django/djintro/</link>
      <pubDate>Mon, 23 Mar 2020 23:50:58 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/linebot/django/djintro/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>參考網站</title>
      <link>https://yehyoung.github.io/linebot/reference/</link>
      <pubDate>Mon, 23 Mar 2020 23:25:08 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/linebot/reference/</guid>
      <description>twstock python爬蟲 — 每日即時股價 股票小秘書教你實戰一招「自動化選股」-附贈Python程式碼 土炮一個 Line 股票機器人 自動看盤機器人 Line Bot助手機</description>
    </item>
    
    <item>
      <title>MarkdownRule</title>
      <link>https://yehyoung.github.io/markdown/markdownrule/</link>
      <pubDate>Mon, 23 Mar 2020 23:08:22 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/markdown/markdownrule/</guid>
      <description>MD001 標題等級應該每次只增加1,如#後應該是##,而不是### MD002 第一個標題應該是top level,即# MD003 統一標題風格如使用了#string 則不應</description>
    </item>
    
    <item>
      <title>Markdown </title>
      <link>https://yehyoung.github.io/markdown/markdown/</link>
      <pubDate>Mon, 23 Mar 2020 23:08:10 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/markdown/markdown/</guid>
      <description>$$$ x = {-b \pm \sqrt{b^2-4ac} \over 2a}. $$$</description>
    </item>
    
    <item>
      <title>參考網站</title>
      <link>https://yehyoung.github.io/hugo/reference/</link>
      <pubDate>Mon, 23 Mar 2020 23:20:21 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/reference/</guid>
      <description>Hugo Host on GitHub Hugo CLI Shortcodes 使用 Hugo 建立靜態網站，並部署在 Github Page 在 GitHub 部署 Hugo 靜態網站</description>
    </item>
    
    <item>
      <title>HugoReference</title>
      <link>https://yehyoung.github.io/hugo/hugoreference/</link>
      <pubDate>Sun, 22 Mar 2020 22:30:22 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/hugoreference/</guid>
      <description>Hugo 官網 佈景 techdoc 打造個人化網站 - Build Personal Website via Hugo Hugo的專案結構 Hugo中的Front Matter与Archetypes 在 Github Pages 建立 Hugo 靜態網站</description>
    </item>
    
    <item>
      <title>HugoCommand</title>
      <link>https://yehyoung.github.io/hugo/07_hugocommand/</link>
      <pubDate>Sun, 22 Mar 2020 11:14:08 +0800</pubDate>
      
      <guid>https://yehyoung.github.io/hugo/07_hugocommand/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>https://yehyoung.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://yehyoung.github.io/about/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
  </channel>
</rss>